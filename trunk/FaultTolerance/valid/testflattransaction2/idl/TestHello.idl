/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */


#ifndef  TEST_HELLO_IDL_
#define  TEST_HELLO_IDL_
#include <CdmwFTStateTransfer.idl>
#pragma prefix "thalesgroup.com"

module CdmwFlatTransaction {    
  
  struct datastruct
  {
    long type;
    long dsid;
    long oid;
    string data;
  };

  typedef sequence<datastruct> datastructs;

  typedef sequence<string> LocationList;
  
  interface HelloInterface {

    /**
     * hello  
     */ 
    void hello();

    /**
     * get_info_from_datastore
     */
    string get_info_from_datastore(in long dsid, in long oid);

    /**
     * kill_process
     */
    void kill_process();

  };

  /** 
   * Hello interface 1
   */
  interface HelloInterface1 : HelloInterface{
    /**
     * trigger_on_insert
     */
    string trigger_on_insert(in long dsid, in long oid, in string data);

    /**
     * who_is_called
     */
    string  who_is_called();

    /**
     * begin
     */ 
    void begin();


    /**
     * begin_without_commit
     */ 
    boolean begin_without_commit(in datastructs d);
    

    /**
     * begin_with_commit
     */ 
    boolean begin_with_commit(in datastructs d);

    /**
     * begin_with_rollback
     */ 
    boolean begin_with_rollback(in datastructs d);

    /**
     * begin_with_kill
     */
    boolean begin_with_kill(in datastructs d, in HelloInterface p);
  };
}; 
#endif // TEST_HELLO_IDL_

