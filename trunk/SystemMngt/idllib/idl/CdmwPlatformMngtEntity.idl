/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */


#ifndef CDMW_PLATFORM_MNGT_ENTITY_IDL_
#define CDMW_PLATFORM_MNGT_ENTITY_IDL_

#include <CdmwPlatformMngtCommon.idl>
#include <CdmwPlatformMngtManagedElement.idl>
#include <CdmwPlatformMngtCommandedElement.idl>

#pragma prefix "thalesgroup.com"

/**
 * Module defining the entity concept of the CDMW Platform Management service.
 */
module CdmwPlatformMngt
{

    /**
    * The entity managed element.
    */
    interface Entity : ManagedElement, CommandContainer
    {
        /**
        * Get the entity status
        *
        * @return the status of the entity with its additional information.
        *
        */
        EntityStatus get_status(out string entity_info);
        
        /**
        * Set the status of the entity with its additional information.
        *
        * @param entity_status the status of the entity.
        * @param entity_info  the information associated with the entity.
        *
        * @exception EntityStatusNotAllowed if the status is not allowed
        */
        void set_status(in EntityStatus entity_status, in string entity_info)
            raises(EntityStatusNotAllowed);
            
        
        /**
        * Get the list of allowed statuses for the entity.
        *
        * @return the list of status values.
        */    
        EntityStatusValues get_status_values ();
        
        /**
        * Returns a snapshot of the entity.
        */
        EntitySnapshot get_snapshot();

    };


    typedef sequence<Entity> Entities;


}; // End Module CdmwPlatformMngt

#endif // CDMW_PLATFORM_MNGT_ENTITY_IDL_

