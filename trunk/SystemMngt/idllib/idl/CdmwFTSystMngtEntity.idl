/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */


#ifndef CDMW_FTSYST_MNGT_ENTITY_IDL_
#define CDMW_FTSYST_MNGT_ENTITY_IDL_

#include <CdmwPlatformMngtCommon.idl>
#include <CdmwPlatformMngtElementBase.idl>

#include <CdmwFTSystMngtManagedElement.idl>

#pragma prefix "thalesgroup.com"

/**
 * Module defining the entity concept of the CDMW Platform Management service.
 */
module CdmwFTSystMngt
{

    /**
    * The CDMW entity accessor.
    */
    interface EntityAccessor : ManagedElementAccessor
    {
        /**
        * Returns the status of the entity with its additional information.
        *
        * @param target_element_path path of target element to access
        * @param entity_info   the information associated with the entity.
        *
        * @return the status of the entity.
        *
        * @exception ManagedElementNotFound if element not found
        *
        */
        CdmwPlatformMngt::EntityStatus get_status(
              in CdmwPlatformMngt::ElementPath target_element_path, 
              out string entity_info)
            raises(CdmwPlatformMngt::ManagedElementNotFound);
        
        /**
        * Set the status of the entity with its additional information.
        *
        * @param target_element_path path of target element to access
        * @param entity_status the status of the entity.
        * @param entity_info  the information associated with the entity.
        *
        * @exception ManagedElementNotFound if element not found
        * @exception EntityStatusNotAllowed if the status is not allowed
        */
        void set_status(
               in CdmwPlatformMngt::ElementPath target_element_path,
               in CdmwPlatformMngt::EntityStatus entity_status, 
               in string entity_info)
            raises(CdmwPlatformMngt::ManagedElementNotFound,
                   CdmwPlatformMngt::EntityStatusNotAllowed);
            
        
        /**
        * Get the list of allowed statuses for the entity.
        *
        * @param target_element_path path of target element to access
        * @return the list of status values.
        *
        * @exception ManagedElementNotFound if element not found
        */    
        CdmwPlatformMngt::EntityStatusValues get_status_values (
               in CdmwPlatformMngt::ElementPath target_element_path)
            raises(CdmwPlatformMngt::ManagedElementNotFound);
        
        /**
        * Returns a snapshot of the entity.
        *
        * @param target_element_path path of target element to access
        *
        * @exception ManagedElementNotFound if element not found
        *
        */
        CdmwPlatformMngt::EntitySnapshot get_snapshot(
               in CdmwPlatformMngt::ElementPath target_element_path)
             raises(CdmwPlatformMngt::ManagedElementNotFound);

    };


}; // End Module CdmwFTSystMngt

#endif // CDMW_FTSYST_MNGT_ENTITY_IDL_

