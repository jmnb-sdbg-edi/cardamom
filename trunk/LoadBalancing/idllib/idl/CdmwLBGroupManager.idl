/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. All rights reserved.
 * 
 * Copyright (C) SELEX-SI 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */

#ifndef _CDMW_LB_GROUP_MANAGER_IDL_
#define _CDMW_LB_GROUP_MANAGER_IDL_

#include <PortableGroup.idl>
#include <CdmwPlatformMngtSupervisionObserver.idl>
/**
 * This module describes interfaces and data types of the CDMW Load Balancing
 * service.
 */

module CdmwLB
{
/**
   * The CDMW LBFroupManager extends the standard Portable Group interfaces with
   * CDMW Load Balancing specific operations based on object group id and
   * for registering locations...
   */
  interface LBGroupManager : PortableGroup::GenericFactory,
                             PortableGroup::ObjectGroupManager,
                             CdmwPlatformMngt::SupervisionObserver
  {
        /**
         * Extracts the object group version from the object group id.
         *
         * @param object_group_id the object group id.
         *
         * @return the object group reference version.
         *
         * @exception PortableGroup::ObjectGroupNotFound if the object group cannot be located.
         */
        PortableGroup::ObjectGroupRefVersion get_object_group_version_from_gid(
            in PortableGroup::ObjectGroupId object_group_id)
            raises(PortableGroup::ObjectGroupNotFound);

        /**
         * Extracts the object group version from the object group reference.
         *
         * @param object_group_ref the object group reference.
         *
         * @return the object group reference version.
         *
         * @exception PortableGroup::ObjectGroupNotFound if the object group cannot be located.
         */
        PortableGroup::ObjectGroupRefVersion get_object_group_version_from_ref(
            in PortableGroup::ObjectGroup object_group)
            raises(PortableGroup::ObjectGroupNotFound);
        
        
  };
};    
#endif // _CDMW_LB_GROUP_MANAGER_IDL_
