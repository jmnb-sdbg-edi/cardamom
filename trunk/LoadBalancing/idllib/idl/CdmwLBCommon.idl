/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. All rights reserved.
 * 
 * Copyright (C) SELEX-SI 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */

#ifndef _CDMW_LB_COMMON_IDL_
#define _CDMW_LB_COMMON_IDL_
#include <CdmwLBService.idl>



/**
 * This module describes interfaces and data types of the CDMW Load Balancing
 * service.
 */
module CdmwLB {


  const IOP::ComponentId TAG_LB_GROUP = IOP::TAG_GROUP;

  const IOP::ComponentId TAG_FALLBACK = 0x54414f05;

  const IOP::ServiceId LB_GROUP_VERSION = 14;
  
  struct TagFallbackTaggedComponent { // tag = TAG_FALLBACK
      boolean is_fallback;
  };

  struct TagLBGroupTaggedComponent { // tag = TAG_LB_GROUP;
      GIOP::Version version;
      PortableGroup::GroupDomainId lb_domain_id;
      PortableGroup::ObjectGroupId object_group_id;
      PortableGroup::ObjectGroupRefVersion object_group_ref_version;
      CdmwLB::StrategyName lb_policy;
  };

  struct LBGroupVersionServiceContext { //context_id = LB_GROUP_VERSION;
      PortableGroup::ObjectGroupRefVersion object_group_ref_version;
      PortableGroup::ObjectGroupId object_group_id;
  };
  /** 
   * This structure holds basic information for an object group member.
   */
  struct MemberInfo {
      /**
       * Object reference of the member
       */
      Object       the_reference;
      /**
       * Location of the member
       */
      PortableGroup::Location the_location;
      
      
  }; // MemberInfo
  
  /**
   * Sequence of MemberInfo structures.
   */
  typedef sequence<MemberInfo> MemberInfos;
  
  /** 
   * This structure holds basic information for an object group data.
   */
  struct ObjectGroupData {
      
      // Repository ID
      string                         repository_id;
      
      // Interoperable Object Group Reference (IOGR)
      ::PortableGroup::ObjectGroup              object_group_ref;
      
      // Version of the Object Group
      ::PortableGroup::ObjectGroupRefVersion    object_group_ref_version;
      
      //Load Balancing Policy for the object group
      string               lb_policy;
      
      // A sequence of (reference,location) for all group members
      MemberInfos          members;
      
  };
  
};

#endif // _CDMW_LB_COMMON_IDL_

