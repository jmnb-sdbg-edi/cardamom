/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */


#ifndef CDMW_PLATFORM_MNGT_SERVICE_BROKER_IDL_
#define CDMW_PLATFORM_MNGT_SERVICE_BROKER_IDL_


#include <CdmwPlatformMngtService.idl>
#include <CdmwPlatformMngtCommonBase.idl>

#pragma prefix "thalesgroup.com"

module CdmwPlatformMngtService
{


    /**
     * The broker providing an actual service identified by a service name.
     */
    interface ServiceBroker
    {

        /**
        * Returns the actual specified service.
        *
        * @param application_name the name of the application.
        * @param process_name the name of the process.
        * @param host_name the name of the host.
        * @param service_name the name identifying the service.
        * @exception ServiceNotFound if service_name doesn't denote
        * an existing service.
        * @exception ServiceUnavailable if the service is unavailable.
        */
        Object get_service(
            in CdmwPlatformMngt::ElementName application_name,
            in CdmwPlatformMngt::ElementName process_name,
            in CdmwPlatformMngt::ElementName host_name,
            in ServiceName service_name)
            raises(ServiceNotFound, ServiceUnavailable);

#ifdef CDMW_USE_FAULTTOLERANCE

	    /*
		 * Set a global service which can't be overwrite
		 * @param service_name the name identifying the service.
		 * @param service_object the object for the service
		 * @exception ServiceAlreadyExists if the service already exits
		 */
	     void set_global_service(in ServiceName service_name, in Object service_object)
		     raises(ServiceAlreadyExists);
#endif

    }; // End interface ServiceBroker


}; // End Module CdmwPlatformMngtService

#endif // CDMW_PLATFORM_MNGT_SERVICE_BROKER_IDL_

