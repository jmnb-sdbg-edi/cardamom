/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */


#ifndef _CDMW_LOCAL_FT_MANAGER_IDL_
#define _CDMW_LOCAL_FT_MANAGER_IDL_

#include <CdmwFTManager.idl>

#pragma prefix "thalesgroup.com"

/**
* This module describes interfaces and data types of the CDMW Fault Tolerance
* service.
*/
module CdmwFT { 


    interface LocalFTManager
    { 

        /**
         * activate the FTManager
         * build news IOGR for the replication manager and the fault notifier
         * and notify the changment on all the primary_backup_admin
         **/
        void activate()
            raises(FTManager::AlreadyActivated);
	
        /**
         * deactivate the FTManager
         **/
        void deactivate();
	
        /**
         * add location of FTManager
         *
         * @execption FT::MemberAlreadyPresent if the location is already define
         * @exception FT::ObjectNotAdded if a problem arrived during the collect of information
         * about the FTManager
         */          
        void add_location(in string the_location)
            raises(FT::MemberAlreadyPresent,
                   FT::ObjectNotAdded);
	
        /**
         * remove location of FTManager
         * @execption FT::MemberNotFound if the location is not found
         * 
         **/
        void remove_location(in string the_location)
            raises(FT::MemberNotFound);
	


    };
};

#endif // _CDMW_FT_MANAGER_IDL_

