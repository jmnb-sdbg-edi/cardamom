#* =========================================================================== *
#* This file is part of CARDAMOM (R) which is jointly developed by THALES
#* and SELEX-SI.
#*
#* It is derivative work based on PERCO Copyright (C) THALES 2000-2003.
#* All rights reserved.
#* 
#* CARDAMOM is free software; you can redistribute it and/or modify it under
#* the terms of the GNU Library General Public License as published by the
#* Free Software Foundation; either version 2 of the License, or (at your
#* option) any later version.
#* 
#* CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
#* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
#* License for more details.
#* 
#* You should have received a copy of the GNU Library General
#* Public License along with CARDAMOM; see the file COPYING. If not, write to
#* the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#* =========================================================================== *

Welcome to the CARDAMOM TUTORIAL
================================

The purpose of CARDAMOM Tutorial, designed to be used with Version 2.1 or greater of Cardamom, 
is to provide comprehensive examples for writing software based on CARDAMOM runtime middleware. 
Provided Makefiles may be reused to write more sofisticated ones that suit needs of CARDAMOM users.

Organization
============
The tutorial is split into two main directories, one didicated for c++ examples and a second 
for java examples. Basically most examples provided in both languages are similar expect for those
the underlying Cardamom service illustrated exists only in c++; this is the case for examples that
illustrate the following services: Fault tolerance, Load Balancing and Time Service.

Within each type of examples (c++ and java) two Readme files are provided:
- README.txt that describes the way to install and run examples related to the Cardamom
  Technical Services, and gives a brief explanation of each example.
- README_CCM.txt that describes the way to install and run examples that describe the way 
  to develop CORBA Components with Cardamom. A brief explanation of each example is given.


Release Note
============
- Issues 1) and 3) known in the version associated with Cardamom 1.1 have been resolved
- All the examples that are not covered in the Tutorial document have been suppressed:
it is: 
ccm210 ccm240 ccm320 ccm_philosophers
lifeCycleEntity lifeCycleEntity_property lifeCycleSession lifeCycleUnmanagedEntity lifeCycleUserFac
supervisionMngt0 supervisionMngt2Dbug supervisionMngt3 supervisionMngt4
naming_domLink naming_objectBase naming_write naming_writeExt      
eventTyped
polynome_lifeCycle3 printerBW_lifeCycle2 printerColor_lifeCycle2 printerColor_lifeCycle3
- clock controlled_clock ftclock lb_initialization demo_lb have been added
- evolution in supervision example to show process monitoring
- event & thread are now covered in the Tutorial document

Remarks
=======
1) Some examples described in the Tutorial document are under the demos/ directory of the
Cardamom installation. It can be decided in a future version to move them in Tutorial directory.
This issue concerns the following examples:
- demo_ft 
- demo_state_transfer
- demo_ft_dcps
Evolution related to ECR-0098

Known Issues
============
1) ccm140 is not working in Java (COMM_FAILURE raised on build_assembly)
comes in Hello.ClientExecutorImpl.ccm_activate(ClientExecutorImpl.java:92)
(Get the server home reference...)
THe orb thinks the objref1 is local whereas it is not: he should not call pre_invoke.
It occurs when 2 java processes have persistant POA with same identifiant and the object is on this POA.
PCR 602 on Jacorb for this subject
