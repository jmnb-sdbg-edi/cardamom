/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES 
 * and SELEX-SI. 
 * 
 * It is derivative work based on PERCO Copyright (C) THALES 2000-2003. 
 * All rights reserved.
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it under 
 * the terms of the GNU Library General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your 
 * option) any later version. 
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public 
 * License for more details. 
 * 
 * You should have received a copy of the GNU Library General 
 * Public License along with CARDAMOM; see the file COPYING. If not, write to 
 * the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */


#ifndef CDMW_PLATFORM_MNGT_ENTITY_OBSERVER_IDL_
#define CDMW_PLATFORM_MNGT_ENTITY_OBSERVER_IDL_


#include <CdmwPlatformMngtEntity.idl>

#pragma prefix "thalesgroup.com"

module CdmwPlatformMngtEntity
{


    /**
     * This interface allows an application to change the status
     * of an entity of the system.
     */
    interface SystemEntityObserver
    {

        /**
        * Changes the status of an entity of the system.
        *
        * @param entity_name the name identifying the entity
        * @param entity_status the new status of the entity
        * @param entity_info the additional information about the status change
        * @exception EntityNotFound if entity_id doesn't denote
        * an existing entity.
        */
        void set_system_entity_status(in EntityName entity_name,
            in EntityStatus entity_status, in string entity_info)
            raises(EntityNotFound);

    }; // End interface SystemEntityObserver


    /**
     * This interface allows application software to change the status
     * of :
     * - one of its entity
     * - one of its application's entities
     * - one of the entities of the system.
     */
    interface EntityObserver : SystemEntityObserver
    {

        /**
        * Changes the status of an entity of the application.
        *
        * @param entity_name the name identifying the entity
        * @param entity_status the new status of the entity
        * @param entity_info the additional information about the status change
        * @exception EntityNotFound if entity_id doesn't denote
        * an existing entity.
        */
        void set_application_entity_status(in EntityName entity_name,
            in EntityStatus entity_status, in string entity_info)
            raises(EntityNotFound);

        /**
        * Changes the status of an entity of the process.
        *
        * @param entity_name the name identifying the entity
        * @param entity_status the new status of the entity
        * @param entity_info the additional information about the status change
        * @exception EntityNotFound if entity_id doesn't denote
        * an existing entity.
        */
        void set_process_entity_status(in EntityName entity_name,
            in EntityStatus entity_status, in string entity_info)
            raises(EntityNotFound);

    }; // End interface EntityObserver
    

}; // End Module CdmwPlatformMngtEntity

#endif // CDMW_PLATFORM_MNGT_ENTITY_OBSERVER_IDL_

