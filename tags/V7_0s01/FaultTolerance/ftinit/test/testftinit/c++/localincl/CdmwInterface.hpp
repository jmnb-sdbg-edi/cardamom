/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */


#ifndef INCL_CDMWINIT_CDMW_INTERFACE_HPP 
#define INCL_CDMWINIT_CDMW_INTERFACE_HPP

#include "Foundation/orbsupport/CORBA.hpp"

/**
* Root namespace for CDMW runtime.
*/
namespace Cdmw 
{

/**
* This namespace holds classes and operations for use during INITIALISATION
* of CDMW processes.
*/
namespace CdmwInit
{

/**
* Purpose:
* <p> Initialise the CDMW runtime and services within the current process.
* Implementation is generated by CDMW code generation tools according to user
* provided description.
* 
*@param orb  A reference to the ORB pseudo-object
*@param argc The number of arguments passed to the program
*@param argv The list of parameters received of the command line
*@param ctrl The user Proces Control callback object for use on the reception of command
* messages initiated by a platform supervisor. A Default Process Control object will be used
* in case of a null ctrl value 
*
*@exception CORBA::BAD_PARAM Invalid parameter. The following CDMW minor codes 
* detail the reason: 
* <DL>
* <DT><STRONG>BAD_PARAMApplicationAgentReferenceMissing</STRONG>
* <DD>The Application Agent's reference is missing from the command line arguments.
* <DT><STRONG>BAD_PARAMInvalidApplicationAgentReference</STRONG>
* <DD>The input IOR is nil or does not denote an Application Agent.
* <DT><STRONG>BAD_PARAMProcessXMLFileNameMissing</STRONG>
* <DD>The CDMW Process XML initialisation file name is missing from the command
* line arguments.
* <DT><STRONG>BAD_PARAMInvalidXMLInitData</STRONG>
* <DD>Inivalid XML initialisation data.
* <DT><STRONG>BAD_PARAMApplicationAgentReferenceMissing</STRONG>
* <DD>The Application Agent's reference is missing from the command line arguments.
* <DT><STRONG>BAD_PARAMRepositoryNotFound</STRONG>
* <DD>There is no CDMW Naming and Repository registered for the current process within
* the Application Agent.
* <DT><STRONG>BAD_PARAMUnknownProcessName</STRONG>
* <DD>The process nameis not known by the Application Agent.
* <DT><STRONG>BAD_PARAMCannotGetRepositoryReference</STRONG>
* <DD>An error occurred during retrieval of the object reference from the Application Agent.
* <DT><STRONG>BAD_PARAMInvalidRepositoryReference</STRONG>
* <DD>The object reference received from the Application Agent is either nil or does not
* denote an CDMW Naming and Repository service.
* <DT><STRONG>BAD_PARAMNameDomainNotFound</STRONG>
* <DD>Default NameDomain is not a NameDomain.
* <DT><STRONG>BAD_PARAMInvalidDefaultDomainName</STRONG>
* <DD>Default NameDomain name is ill-formed.
* <DT><STRONG>BAD_PARAMInvalidTraceProducerLocation</STRONG>
* <DD>The location of the TraceProducer object is not valid.
* <DT><STRONG>BAD_PARAMLifeCycleFrameworkPOAExists</STRONG>
* <DD>A POA with the same name as the LifeCycle POA already exists.
* <DT><STRONG>BAD_PARAMLifeCycleFrameworkInit</STRONG>
* <DD>Bad parameter for init of the LifeCycle framework (Threading policy may not be valid)
* </DL>
*@exception CORBA::INTERNAL Internal failure.The following CDMW minor codes 
* detail the reason: 
* <DL>
* <DT><STRONG>INTERNALXMLLibraryError</STRONG>
* <DD>Failure in XML library.
* <DT><STRONG>INTERNAL</STRONG>
* <DD>Internal CDMW runtime failure.
* <DT><STRONG>INTERNALORBAdapterInactive</STRONG>
* <DD>The POA Manager is in the <I>inactive</I> state.
* <DT><STRONG>INTERNALCdmwRepositoryError</STRONG>
* <DD>Failure xithin the CDMW Repository Error. This may happen if the Trace collectors
* name domain is not present in the Repository, or if the ADMIN_ROOT_CONTEXT_ID is not set.
* <DT><STRONG>INTERNALInvalidTraceCollectorsLocation</STRONG>
* <DD>The location of TraceCollectors is not valid.
* <DT><STRONG>INTERNALCdmwRepositoryNotExists</STRONG>
* <DD>The CDMW Repository object does not exist (has been deleted!)
* <DT><STRONG>INTERNALLifeCycleFrameworkError</STRONG>
* <DD>The LifeCycle framework has choosen a wrong policy for its POA.
* </DL>
*@exception CORBA::NO_MEMORY CDMW runtime could not allocate memory
*@exception CORBA::CORBA::TRANSIENT The <STRONG>TRANSIENTCannotReachApplicationAgent</STRONG>
* minor code indicates that it cannot reach the CDMW ApplicationAgent now.
*@exception CORBA::SystemException Any CORBA system exception that can be
* raised by the undelying ORB.
*/ 
extern void CDMW_init(CORBA::ORB_ptr orb, int & argc, char** argv)
    throw (CORBA::SystemException);

/**
* Purpose:
* <p> Clean any static data allocated/initialised by CDMW_init.
* Implementation is generated by CDMW code generation tools according to user
* provided description.
* <STRONG>NOTA</STRONG> CDMW Factory objects are deactivated at ORB shutdown.
* 
*@param orb  A reference to the ORB pseudo-object	
*
*/
extern void CDMW_cleanup(CORBA::ORB_ptr orb) throw();

}; // End namespace CdmwInit

}; // End namespace Cdmw 

#endif // INCL_CDMWINIT_CDMW_INTERFACE_HPP

