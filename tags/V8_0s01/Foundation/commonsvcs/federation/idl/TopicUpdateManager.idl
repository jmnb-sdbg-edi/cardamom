/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */
#if defined(TAO)
#include <tao/OctetSeq.pidl>
#endif  // if defined (TAO)

module Cdmw {
    module CommonSvcs {

        typedef octet UUID[16];

        typedef unsigned long RcvPolicy;
        const RcvPolicy ACCEPT_ALL   = 0x00000000;
        const RcvPolicy ACCEPT_NEWER = 0x00000001;

        struct TimeStamp {
            unsigned long sec;
            unsigned long usec;
        };
        
        struct Topic {
            long            key;        /* A key identifies univocally the target of the update */
            RcvPolicy       rcv_policy; /* A key identifies univocally the reception policy     */
            CORBA::OctetSeq data;
        };
        
        struct TopicMessage {
            UUID source; 
            TimeStamp ts;
            Topic t;
        };
        
        interface MiopTopicUpdateManager {
            oneway void distribute(in TopicMessage msg);
        }; 
    };
};
