/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */


#ifndef CDMW_PLATFORM_MNGT_ELEMENT_REPOSITORY_IDL_
#define CDMW_PLATFORM_MNGT_ELEMENT_REPOSITORY_IDL_




#include <CdmwPlatformMngtCommonBase.idl>

#pragma prefix "thalesgroup.com"

module CdmwPlatformMngt
{
    interface ManagedElement;
    
    /**
    * The element repository data.
    */
    struct ElementRepositoryData
    {
        /**
         * The type of type of the element.
         */
        ElementType element_type;
        
        /**
         * The managed element reference.
         */
        ManagedElement element;
    };
    
    /**
    * The repository for SystemMngt elements.
    */
    interface ElementRepository
    {
        /**
        * Returns the element repository data defined by its absolute path
        * @exception ElementPathInvalid if element path is invalid
        * @exception ManagedElementNotFound if element not found
        */
        ElementRepositoryData get_element_data (in ElementPath element_path)
            raises (ElementPathInvalid,
                    ManagedElementNotFound);
                    
        /**
        * Returns the element object reference defined by its absolute path
        * @exception ElementPathInvalid if element path is invalid
        * @exception ManagedElementNotFound if element not found
        */
        ManagedElement get_element (in ElementPath element_path)
            raises (ElementPathInvalid,
                    ManagedElementNotFound);
    };
    
    
    /**
    * The RW repository for SystemMngt elements.
    */
    interface RWElementRepository : ElementRepository
    {
        /**
        * Add the element in the repository
        *
        * @param element_path   The element path
        * @param element_type   The element type 
        * @param element_object The element object reference
        *
        * @exception ElementPathInvalid if element path is invalid
        * @exception ElementAlreadyExists if element already exists
        */
        void add_element (
                     in ElementPath element_path,
                     in ElementType element_type,
                     in ManagedElement element_object)
            raises (ElementPathInvalid,
                    ElementAlreadyExists);
                    
                    
        /**
        * Remove the element in the repository
        *
        * @param element_path The element path
        *
        * @exception ElementPathInvalid if element path is invalid
        * @exception ManagedElementNotFound if element not found
        */
        void remove_element (in ElementPath element_path)
            raises (ElementPathInvalid,
                    ManagedElementNotFound);
                    
    };
    
    
}; // End Module CdmwPlatformMngt

#endif // CDMW_PLATFORM_MNGT_ELEMENT_REPOSITORY_IDL_

