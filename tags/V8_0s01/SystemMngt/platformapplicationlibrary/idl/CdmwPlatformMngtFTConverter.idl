/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */

#ifndef CDMW_PLATFORM_MNGT_FT_CONVERTER_IDL_
#define CDMW_PLATFORM_MNGT_FT_CONVERTER_IDL_

#if defined(TAO)

#include <CdmwPlatformMngtCommon.idl>
#include <CdmwPlatformMngtMonitoringObserver.idl>

#include "CosNotifyComm.idl" // from telecom/98-11-03.idl

#pragma prefix "thalesgroup.com"

module CdmwPlatformMngt
{


    /**
     * This interface allows to tranform a fault report to
     * a SystemMngt event
     */
    interface FTConverter : CosNotifyComm::StructuredPushConsumer
    {
        /**
        * Registers ProcessObserver for an application.
        *
        * @param application_name the name of the application
        * @param observer the monitorable process observer for the application
        *
        */
        void register_process_observer(in string application_name,
            in ProcessObserver observer);

        /**
        * Unregisters ProcessObserver for an application.
        *
        * @param application_name the name of the application
        *
        * @exception ObserverNotFound if application_name doesn't denote
        * a previously registered observer.
        */
        void unregister_process_observer(in string application_name);

    }; // End interface FTConverter




}; // End Module CdmwPlatformMngt
#endif  // if defined (TAO)
#endif // CDMW_PLATFORM_MNGT_FT_CONVERTER_IDL_

