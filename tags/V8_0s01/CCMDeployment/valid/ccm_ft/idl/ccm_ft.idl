/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */

#ifndef CCM_FT_IDL_
#define CCM_FT_IDL_

#ifndef __OpenCCM__
#include <Components.idl>
#endif


#pragma prefix "acme.com"

module CcmFtTest
{
    module FacetModule
    {
        interface HostInfo {
            string get_hostname();
        };
    };

    module EventTypeModule
    {
        eventtype Command {
            public string commandName;
        };
    
        const string COMMAND_GET_HOSTNAME = "get_hostname";
        const string COMMAND_KILL         = "kill";
        
        eventtype HostnameResult {
            public string hostname;
        };
    };
    
    

    module ServerModule
    {
        component ServerWithFacet {
            attribute string expectedClientHostname;
            
            provides  FacetModule::HostInfo serverHostInfo;
            uses      FacetModule::HostInfo clientHostInfo;
        };
        
        
        home ServerWithFacetHome manages ServerWithFacet 
        {
        };
        
        
        
        component ServerWithEvents {
            consumes  EventTypeModule::Command             commands;
            emits     EventTypeModule::HostnameResult      hostnameEmits;
            publishes EventTypeModule::HostnameResult      hostnamePublishes;
        };
        
        home ServerWithEventsHome manages ServerWithEvents 
        {
        };
    };
    
    module ClientModule
    {
        component Client {
            attribute string expectedPrimaryHostname;
            attribute string expectedBackup1Hostname;
            attribute string expectedBackup2Hostname;
            
            uses      FacetModule::HostInfo           serverHostInfo;
            provides  FacetModule::HostInfo           clientHostInfo;
            emits     EventTypeModule::command        commandEmits;
            publishes EventTypeModule::command        commandPublishes;
            consumes  EventTypeModule::HostnameResult hostnameResults;
        };
        
        home ClientHome manages Client 
        {
        };
    };

};


#endif  // CCM_FT_IDL_
    
