<?xml version="1.0" encoding="utf-8"?>
<!-- ===================================================================== -->
<!--
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. It is derivative work based on PERCO Copyright (C) THALES
 * 2000-2003. All rights reserved.
 * 
 * Copyright (C) THALES 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<!-- ===================================================================== -->


<!DOCTYPE project [
    <!ENTITY common_targets SYSTEM "file:../../data/CommonConfigTargets.xml">
]>


<project name="ConfigureSaxon" default="-check-Saxon" basedir=".">


    <description>
        This build file locates and checks the SAXON XSLT processor.
    </description>


    <!-- Include XML fragments -->
    &common_targets;


    <!-- =======================================================================
        The "-check-Saxon" target checks if Saxon is suitable for the build.

        It depends on the following targets:
            + "-initialize"
            + "-test1"
            + "-set-Saxon-properties"
    -->
    <target name="-check-Saxon"
            depends="-initialize, -test1, -set-Saxon-properties">

        <!-- save Saxon properties -->
        <echoproperties destfile="${cb.tools.conf}" prefix="config."/>
    </target>


    <!-- =======================================================================
        The "-locate-Saxon" target determines the installation directory of
        Saxon.

        It depends on the following targets:
            + "-initialize"
    -->
    <target name="-locate-Saxon" depends="-initialize">
        <!-- determine the Saxon installation directory -->
        <var name="my.var"
             value="Enter the ${tool.fullname} installation directory"/>

        <propertycopy property="saxon.default.install.dir" silent="true"
                      from="${mb.prev}.config.${tool.name}.install.dir"/>

        <if>
            <isset property="saxon.default.install.dir"/>
            <then>
                <if>
                    <isfalse value="${passive.mode}"/>
                    <then>
                        <xinput message="${my.var}" dirPathOnly="true"
                                addproperty="config.${tool.name}.install.dir"
                                default="${saxon.default.install.dir}"/>
                    </then>
                    <else>
                        <propertycopy property="config.${tool.name}.install.dir"
                                      from="saxon.default.install.dir"/>
                    </else>
                </if>
            </then>
            <else>
                <xinput message="${my.var}" dirPathOnly="true"
                        addproperty="config.${tool.name}.install.dir"/>
            </else>
        </if>

        <propertycopy property="saxon.install.dir"
                      from="config.${tool.name}.install.dir"/>

        <!-- save some properties temporarily -->
        <propertyfile file="${tmpconfig.cache}">
            <entry key="config.${tool.name}.install.dir"
                   value="${saxon.install.dir}"/>
        </propertyfile>

        <!-- determine the lib directory -->
        <propertycopy property="saxon.default.lib.dir" silent="true"
                      from="${mb.prev}.config.${tool.name}.lib.dir"/>

        <if>
            <not>
                <isset property="saxon.default.lib.dir"/>
            </not>
            <then>
                <!-- try to guess the lib directory -->
                <findfile file="saxon.jar" dir="${saxon.install.dir}"
                          findFirst="true" recursive="true"
                          property="saxon.saxon.jar"/>

                <dirname property="saxon.default.lib.dir"
                         file="${saxon.saxon.jar}"/>
            </then>
        </if>

        <if>
            <isfalse value="${passive.mode}"/>
            <then>
                <xinput message="Enter the ${tool.fullname} lib directory"
                        addproperty="config.${tool.name}.lib.dir"
                        default="${saxon.default.lib.dir}" dirPathOnly="true"/>
            </then>
            <else>
                <propertycopy property="config.${tool.name}.lib.dir"
                              from="saxon.default.lib.dir"/>
            </else>
        </if>

        <propertycopy property="saxon.lib.dir"
                      from="config.${tool.name}.lib.dir"/>

        <!-- save some properties temporarily -->
        <propertyfile file="${tmpconfig.cache}">
            <entry key="config.${tool.name}.lib.dir"
                   value="${saxon.lib.dir}"/>
        </propertyfile>

        <!-- save the properties -->
        <echoproperties destfile="${cb.tools.conf}" prefix="config."/>
    </target>


    <!-- =======================================================================
        The "-initialize" target defines some properties for the build.

        It depends on the following targets:
            + "-check-global-aliases"
    -->
    <target name="-initialize" depends="-check-global-aliases">
        <!-- the required version for Saxon -->
        <propertycopy property="saxon.required.version"
                      from="require.${my.os.name}.${tool.name}.version"/>

        <!--
            load properties from the temporary file so that next time the
            "echoproperties" task overwrites this file, the properties are not
            lost.
        -->
        <property file="${cb.tools.conf}"/>

        <property name="tool.fullname" value="Saxon"/>
    </target>


    <!-- =======================================================================
        The "-test1" target checks whether the Saxon JAR files can be found.
    -->
    <target name="-test1">
        <echo message="Checking the ${tool.fullname} lib directory"/>

        <!--
            the test is successful if all the required JAR files are found in
            that directory
        -->
        <propertycopy property="saxon.lib.dir"
                      from="config.${tool.name}.lib.dir"/>

        <!-- saxon.jar -->
        <property name="saxon.saxon.jar"
                  location="${saxon.lib.dir}${FS}saxon.jar"/>
        
        <available file="${saxon.saxon.jar}" type="file"
                   property="saxon.saxon.jar.is.ok"/>

        <!-- stop checking if the file was not found -->
        <fail unless="saxon.saxon.jar.is.ok"
              message="Could not find ${saxon.saxon.jar}."/>
    </target>


    <!-- =======================================================================
        The "-set-Saxon-properties" target defines properties that will be
        saved into the site configuration file.
    -->
    <target name="-set-Saxon-properties">
        <!-- classpath -->
        <findfile file="*.jar" dir="${saxon.lib.dir}" recursive="true"
                  separator="${PS}" property="config.${tool.name}.classpath"/>
    </target>


</project>

