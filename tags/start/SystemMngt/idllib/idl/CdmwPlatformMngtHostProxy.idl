/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES 
 * and SELEX-SI. 
 * 
 * It is derivative work based on PERCO Copyright (C) THALES 2000-2003. 
 * All rights reserved.
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it under 
 * the terms of the GNU Library General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your 
 * option) any later version. 
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public 
 * License for more details. 
 * 
 * You should have received a copy of the GNU Library General 
 * Public License along with CARDAMOM; see the file COPYING. If not, write to 
 * the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */


#ifndef CDMW_PLATFORM_MNGT_HOST_IDL_
#define CDMW_PLATFORM_MNGT_HOST_IDL_


#include <CdmwPlatformMngtCommon.idl>
#include <CdmwPlatformMngtPropertyContainer.idl>
#include <CdmwPlatformMngtMonitoring.idl>

#pragma prefix "thalesgroup.com"

module CdmwPlatformMngt
{

    /**
    * The iterator for HostNames.
    */
    interface HostNamesIterator
    {
        void reset();

        boolean next_one(out HostName host_name);

        boolean next_n(in unsigned long how_many,
           out HostNames host_names);

        void destroy();
    };


    /**
     * Proxy of a host.
     * Runtime information about the host are accessed via
     * properties that are returned by a HostProbe.
     */
    interface HostProxy : RWPropertyContainer
    {

        /**
        * The name of the host.
        */
        readonly attribute HostName name;

        /**
        * The status of the host.
        */
        readonly attribute HostStatus status;

        /**
        * The full path to the platform application executable.
        */
        readonly attribute string platform_application_exe;

        /**
        * The full path to the application agent executable.
        */
        readonly attribute string application_agent_exe;

    };


    typedef sequence<HostProxy> HostProxies;


    /**
    * The iterator for HostsProxies.
    */
    interface HostProxiesIterator
    {
        void reset();

        boolean next_one(out HostProxy a_host);

        boolean next_n(in unsigned long how_many,
           out HostProxies n_hosts);

        void destroy();

    }; // End interface HostsIterator


    /**
     * The probe of a host.
     * Runtime information about the host are accessed via
     * properties.
     */
    interface HostProbe : PullMonitorable, PropertyContainer
    {

    };


    /**
    * The container of known hosts.
    */
    interface HostContainer
    {

        unsigned long get_number_of_hosts();

        void get_all_host_names(in unsigned long how_many,
            out HostNames host_names,
            out HostNamesIterator rest);

        HostProxy get_host(in HostName host_name)
            raises(HostNotFound);

        boolean get_hosts(
            in HostNames host_names,
            out HostProxies hosts);

        void get_all_hosts(in unsigned long how_many,
            out HostProxies hosts,
            out HostProxiesIterator rest);

    }; // End interface HostContainer


}; // End Module CdmwPlatformMngt


#endif // CDMW_PLATFORM_MNGT_HOST_IDL_

