/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES 
 * and SELEX-SI. 
 * 
 * It is derivative work based on PERCO Copyright (C) THALES 2000-2003. 
 * All rights reserved.
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it under 
 * the terms of the GNU Library General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your 
 * option) any later version. 
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public 
 * License for more details. 
 * 
 * You should have received a copy of the GNU Library General 
 * Public License along with CARDAMOM; see the file COPYING. If not, write to 
 * the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */


#ifndef CDMW_PLATFORM_MNGT_ENTITY_IDL_
#define CDMW_PLATFORM_MNGT_ENTITY_IDL_


#pragma prefix "thalesgroup.com"

/**
 * Module defining the entity concept of the CDMW Platform Management service.
 */
module CdmwPlatformMngtEntity
{


    /**
    * The entity name type.
    */
    typedef string EntityName;

    typedef sequence<EntityName> EntityNames;

    /**
    * The specified entity has not been found.
    */
    exception EntityNotFound {};

    /**
    * The specified entity already exists.
    */
    exception EntityAlreadyExists {};

    /**
    * The different status of an entity :
    */
    enum EntityStatus
    {
        /**
        * The entity is functioning correctly
        */
        ENTITY_FUNCTIONING,

        /**
        * The entity has an applicative dysfunction
        */
        ENTITY_DYSFUNCTION,

        /**
        * The entity doesn't respond
        */
        ENTITY_FAILED_NO_RESPONSE,

        /**
        * The entity is technically dead
        */
        ENTITY_FAILED_DEATH
    };

    /**
    * The entity
    */
    struct Entity
    {
        /**
         * The name of the entity.
         */
        EntityName entity_name;

        /**
         * The status of the entity.
         */
        EntityStatus entity_status;

        /**
         * The information associated with the entity.
         */
        string entity_info;
    };

    typedef sequence<Entity> Entities;


}; // End Module CdmwPlatformMngtEntity

#endif // CDMW_PLATFORM_MNGT_ENTITY_IDL_

