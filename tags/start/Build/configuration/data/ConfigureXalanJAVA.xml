<?xml version="1.0" encoding="utf-8"?>
<!-- ===================================================================== -->
<!--
 * This file is part of CARDAMOM (R) which is jointly developed by THALES 
 * and SELEX-SI. 
 * 
 * It is derivative work based on PERCO Copyright (C) THALES 2000-2003. 
 * All rights reserved.
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it under 
 * the terms of the GNU Library General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your 
 * option) any later version. 
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public 
 * License for more details. 
 * 
 * You should have received a copy of the GNU Library General 
 * Public License along with CARDAMOM; see the file COPYING. If not, write to 
 * the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<!-- ===================================================================== -->


<!DOCTYPE project [
    <!ENTITY common_targets SYSTEM "file:../../data/CommonConfigTargets.xml">
]>


<project name="ConfigureXalanJAVA" default="-check-XalanJAVA" basedir=".">


    <description>
        This build file locates and checks Apache Xalan JAVA.
    </description>


    <!-- Include XML fragments -->
    &common_targets;


    <!-- =======================================================================
        The "check-XalanJAVA" target checks if Apache Xalan JAVA is suitable for
        the build.

        It depends on the following targets:
            + "-initialize"
            + "-test1"
            + "-set-XalanJAVA-properties"
    -->
    <target name="-check-XalanJAVA"
            depends="-initialize, -test1, -set-XalanJAVA-properties">

        <!-- save XalanJAVA properties -->
        <echoproperties destfile="${cb.tools.conf}" prefix="config."/>
    </target>


    <!-- =======================================================================
        The "-locate-XalanJAVA" target determines the installation directory of
        Apache Xalan JAVA.

        It depends on the following targets:
            + "-initialize"
    -->
    <target name="-locate-XalanJAVA" depends="-initialize">
        <!-- determine the XalanJAVA installation directory -->
        <var name="my.var"
             value="Enter the ${tool.fullname} installation directory"/>

        <propertycopy property="xalanj.default.install.dir" silent="true"
                      from="${mb.prev}.config.${tool.name}.install.dir"/>

        <if>
            <isset property="xalanj.default.install.dir"/>
            <then>
                <if>
                    <isfalse value="${passive.mode}"/>
                    <then>
                        <xinput message="${my.var}" dirPathOnly="true"
                                addproperty="config.${tool.name}.install.dir"
                                default="${xalanj.default.install.dir}"/>
                    </then>
                    <else>
                        <propertycopy property="config.${tool.name}.install.dir"
                                      from="xalanj.default.install.dir"/>
                    </else>
                </if>
            </then>
            <else>
                <xinput message="${my.var}" dirPathOnly="true"
                        addproperty="config.${tool.name}.install.dir"/>
            </else>
        </if>

        <propertycopy property="xalanj.install.dir"
                      from="config.${tool.name}.install.dir"/>

        <!-- save some properties temporarily -->
        <propertyfile file="${tmpconfig.cache}">
            <entry key="config.${tool.name}.install.dir"
                   value="${xalanj.install.dir}"/>
        </propertyfile>

        <!-- determine the lib directory -->
        <propertycopy property="xalanj.default.lib.dir" silent="true"
                      from="${mb.prev}.config.${tool.name}.lib.dir"/>

        <if>
            <not>
                <isset property="xalanj.default.lib.dir"/>
            </not>
            <then>
                <!-- try to guess the lib directory -->
                <findfile file="xalan.jar"
                          dir="${xalanj.install.dir}" findFirst="true"
                          recursive="true" property="xalanj.xalan.jar"/>

                <dirname property="xalanj.default.lib.dir"
                         file="${xalanj.xalan.jar}"/>
            </then>
        </if>

        <if>
            <isfalse value="${passive.mode}"/>
            <then>
                <xinput message="Enter the ${tool.fullname} lib directory"
                        addproperty="config.${tool.name}.lib.dir"
                        default="${xalanj.default.lib.dir}" dirPathOnly="true"/>
            </then>
            <else>
                <propertycopy property="config.${tool.name}.lib.dir"
                              from="xalanj.default.lib.dir"/>
            </else>
        </if>

        <propertycopy property="xalanj.lib.dir"
                      from="config.${tool.name}.lib.dir"/>

        <!-- save some properties temporarily -->
        <propertyfile file="${tmpconfig.cache}">
            <entry key="config.${tool.name}.lib.dir"
                   value="${xalanj.lib.dir}"/>
        </propertyfile>

        <!-- save the properties -->
        <echoproperties destfile="${cb.tools.conf}" prefix="config."/>
    </target>


    <!-- =======================================================================
        The "-initialize" target defines some properties for the build.

        It depends on the following targets:
            + "-check-global-aliases"
    -->
    <target name="-initialize" depends="-check-global-aliases">
        <!-- the required version for XalanJAVA -->
        <propertycopy property="xalanj.required.version"
                      from="require.${my.os.name}.${tool.name}.version"/>

        <!--
            load properties from the temporary file so that next time the
            "echoproperties" task overwrites this file, the properties are not
            lost.
        -->
        <property file="${cb.tools.conf}"/>

        <property name="tool.fullname" value="Apache Xalan JAVA"/>
    </target>


    <!-- ======================================================================
        The "-test1" target checks whether the Xalan JAVA JAR files can be
        found.
    -->
    <target name="-test1">
        <echo message="Checking the ${tool.fullname} lib directory"/>

        <!--
            the test is successful if all the required JAR files are found in
            that directory
        -->
        <propertycopy property="xalanj.lib.dir"
                      from="config.${tool.name}.lib.dir"/>

        <!-- xalan.jar -->
        <property name="xalanj.xalan.jar"
                  location="${xalanj.lib.dir}${FS}xalan.jar"/>

        <available file="${xalanj.xalan.jar}"
                   property="xalanj.xalan.jar.is.ok"/>

        <!-- stop checking if the file was not found -->
        <fail unless="xalanj.xalan.jar.is.ok"
              message="Could not find ${xalanj.xalan.jar}."/>

        <!-- xml-apis.jar -->
        <property name="xalanj.xml-apis.jar"
                  location="${xalanj.lib.dir}${FS}xml-apis.jar"/>

        <available file="${xalanj.xml-apis.jar}"
                   property="xalanj.xml-apis.jar.is.ok"/>

        <!-- stop checking if the file was not found -->
        <fail unless="xalanj.xml-apis.jar.is.ok"
              message="Could not find ${xalanj.xml-apis.jar}."/>
    </target>


    <!-- =======================================================================
        The "-set-XalanJAVA-properties" target defines properties that will be
        saved into the site configuration file.
    -->
    <target name="-set-XalanJAVA-properties">
        <!-- classpath -->
        <findfile file="*.jar" dir="${xalanj.lib.dir}" recursive="true"
                  separator="${PS}" property="config.${tool.name}.classpath"/>
    </target>

    
</project>

