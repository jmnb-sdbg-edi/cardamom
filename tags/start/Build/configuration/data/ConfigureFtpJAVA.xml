<?xml version="1.0" encoding="utf-8"?>
<!-- ===================================================================== -->
<!--
 * This file is part of CARDAMOM (R) which is jointly developed by THALES 
 * and SELEX-SI. 
 * 
 * It is derivative work based on PERCO Copyright (C) THALES 2000-2003. 
 * All rights reserved.
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it under 
 * the terms of the GNU Library General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your 
 * option) any later version. 
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public 
 * License for more details. 
 * 
 * You should have received a copy of the GNU Library General 
 * Public License along with CARDAMOM; see the file COPYING. If not, write to 
 * the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<!-- ===================================================================== -->


<!DOCTYPE project [
    <!ENTITY common_targets SYSTEM "file:../../data/CommonConfigTargets.xml">
]>


<project name="ConfigureFtpJAVA" default="-check-FtpJAVA" basedir=".">


    <description>
        This build file locates and checks JAVA FTP.
    </description>


    <!-- Include XML fragments -->
    &common_targets;


    <!-- =======================================================================
        The "-check-FtpJAVA" target checks if JAVA FTP is suitable for the
        build.

        It depends on the following targets:
            + "-initialize"
            + "-test1"
            + "-test2"
            + "-set-FtpJAVA-properties"
    -->
    <target name="-check-FtpJAVA"
            depends="-initialize, -test1, -test2, -set-FtpJAVA-properties">

        <!-- save FtpJAVA properties -->
        <echoproperties destfile="${cb.tools.conf}" prefix="config."/>
    </target>


    <!-- =======================================================================
        The "-locate-FtpJAVA" target determines the installation directory of
        JAVA FTP.

        It depends on the following targets:
            + "-initialize"
    -->
    <target name="-locate-FtpJAVA" depends="-initialize">
        <!-- determine the JAVA FTP installation directory -->
        <!--
        <var name="my.var"
             value="Enter the ${tool.fullname} installation directory"/>

        <propertycopy name="ftpjava.default.install.dir" silent="true"
                      from="${mb.prev}.config.${tool.name}.install.dir"/>

        <if>
            <isset property="ftpjava.default.install.dir"/>
            <then>
                <if>
                    <isfalse value="${passive.mode}"/>
                    <then>
                        <xinput message="${my.var}" dirPathOnly="true"
                                addproperty="config.${tool.name}.install.dir"
                                default="${ftpjava.default.install.dir}"/>
                    </then>
                    <else>
                        <propertycopy property="config.${tool.name}.install.dir"
                                      from="ftpjava.default.install.dir"/>
                    </else>
                </if>
            </then>
            <else>
                <xinput message="${my.var}" dirPathOnly="true"
                        addproperty="config.${tool.name}.install.dir"/>
            </else>
        </if>

        <propertycopy name="ftpjava.install.dir"
                      from="config.${tool.name}.install.dir"/>
        -->

        <!-- save some properties temporarily -->
        <!--
        <propertyfile file="${tmpconfig.cache}">
            <entry key="config.${tool.name}.install.dir"
                   value="${ftpjava.install.dir}"/>
        </propertyfile>
        -->

        <!-- determine the JAVA FTP lib directory -->
        <!--
        <propertycopy name="ftpjava.default.lib.dir" silent="true"
                      from="${mb.prev}.config.${tool.name}.lib.dir"/>

        <if>
            <not>
                <isset property="ftpjava.default.lib.dir"/>
            </not>
            <then>
                <findfile file="ftp.jar" dir="${ftpjava.install.dir}"
                          findFirst="true" recursive="true"
                          property="ftpjava.ftp.jar"/>

                <dirname property="ftpjava.default.lib.dir"
                         file="${ftpjava.ftp.jar}"/>
            </then>
        </if>

        <if>
            <isfalse value="${passive.mode}"/>
            <then>
                <xinput message="Enter the ${tool.fullname} lib directory"
                        addproperty="config.${tool.name}.lib.dir"
                        default="${ftpjava.default.lib.dir}"
                        dirPathOnly="true"/>
            </then>
            <else>
                <propertycopy property="config.${tool.name}.lib.dir"
                              from="ftpjava.default.lib.dir"/>
            </else>
        </if>

        <propertycopy name="ftpjava.lib.dir"
                      from="config.${tool.name}.lib.dir"/>
        -->

        <!-- save some properties temporarily -->
        <!--
        <propertyfile file="${tmpconfig.cache}">
            <entry key="config.${tool.name}.lib.dir"
                   value="${ftpjava.lib.dir}"/>
        </propertyfile>
        -->

        <!-- determine the FTP home directory -->
        <var name="my.var"
             value="Enter the FTP home directory"/>

        <propertycopy name="ftpjava.default.ftp.dir" silent="true"
                      from="${mb.prev}.config.${tool.name}.ftp.dir"/>

        <if>
            <isset property="ftpjava.default.ftp.dir"/>
            <then>
                <if>
                    <isfalse value="${passive.mode}"/>
                    <then>
                        <xinput message="${my.var}" dirPathOnly="true"
                                addproperty="config.${tool.name}.ftp.dir"
                                default="${ftpjava.default.ftp.dir}"/>
                    </then>
                    <else>
                        <propertycopy property="config.${tool.name}.ftp.dir"
                                      from="ftpjava.default.ftp.dir"/>
                    </else>
                </if>
            </then>
            <else>
                <xinput message="${my.var}" dirPathOnly="true"
                        addproperty="config.${tool.name}.ftp.dir"/>
            </else>
        </if>

        <propertycopy name="ftpjava.ftp.dir"
                      from="config.${tool.name}.ftp.dir"/>

        <!-- save some properties temporarily -->
        <propertyfile file="${tmpconfig.cache}">
            <entry key="config.${tool.name}.ftp.dir"
                   value="${ftpjava.ftp.dir}"/>
        </propertyfile>

        <!-- save the properties -->
        <echoproperties destfile="${cb.tools.conf}" prefix="config."/>
    </target>


    <!-- =======================================================================
        The "-initialize" target defines some properties for the build.

        It depends on the following targets:
            + "-check-global-aliases"
    -->
    <target name="-initialize" depends="-check-global-aliases">
        <!-- the required version for Ftp JAVA -->
        <!--
        <propertycopy name="ftpjava.required.version"
                      from="require.${my.os.name}.${tool.name}.version"/>
        -->

        <!--
            load properties from the temporary file so that next time the
            "echoproperties" task overwrites this file, the properties are not
            lost
        -->
        <property file="${cb.tools.conf}"/>

        <!--
        <property name="tool.fullname" value="JAVA FTP"/>
        -->
    </target>


    <!-- =======================================================================
        The "-test1" target checks whether the FTP home directory exists and is
        not write-protected.
    -->
    <target name="-test1">
        <!--
        <echo message="Checking the ${tool.fullname} home directory"/>
        -->
        <echo message="Checking the FTP home directory"/>

        <!-- the test is successful if the directory exists -->
        <propertycopy name="ftpjava.ftp.dir"
                      from="config.${tool.name}.ftp.dir"/>

        <available file="${ftpjava.ftp.dir}" type="dir"
                   property="ftpjava.ftp.dir.is.ok"/>

        <!-- stop checking if the directory doesn't exist -->
        <fail unless="ftpjava.ftp.dir.is.ok"
              message="${ftpjava.ftp.dir} does not exist."/>

        <!-- the test is successful if the directory is not write-protected -->
        <trycatch>
            <try>
                <touch file="${ftpjava.ftp.dir}${FS}test.txt"/>
                <delete file="${ftpjava.ftp.dir}${FS}test.txt"/>
            </try>
            <catch>
                <fail message="${ftpjava.ftp.dir} is write-protected."/>
            </catch>
        </trycatch>
    </target>


    <!-- =======================================================================
        The "-test2" target checks whether the JAVA FTP JAR file can be found.
    -->
    <target name="-test2">
        <!--
        <echo message="Checking the ${tool.fullname} lib directory"/>
        -->

        <!-- the test is successful if ftp.jar is found -->
        <!--
        <propertycopy name="ftpjava.lib.dir"
                      from="config.${tool.name}.lib.dir"/>

        <property name="ftpjava.ftp.jar"
                  location="${ftpjava.lib.dir}${FS}ftp.jar"/>

        <available file="${ftpjava.ftp.jar}" type="file"
                   property="ftpjava.ftp.jar.is.ok"/>
        -->

        <!-- stop checking if the file was not found -->
        <!--
        <fail unless="ftpjava.ftp.jar.is.ok"
              message="Could not find ${ftpjava.ftp.jar}."/>
        -->
    </target>


    <!-- =======================================================================
        The "-set-FtpJAVA-properties" target defines properties that will be
        saved into the site configuration file.
    -->
    <target name="-set-FtpJAVA-properties">
        <!-- classpath -->
        <!--
        <findfile file="*.jar" dir="${ftpjava.lib.dir}" recursive="true"
                  separator="${PS}" property="config.${tool.name}.classpath"/>
        -->
    </target>


</project>

