/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. All rights reserved.
 * 
 * Copyright (C) SELEX-SI 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */

#ifndef _CDMW_LB_IOGR_FACTORY_IDL_
#define _CDMW_LB_IOGR_FACTORY_IDL_

#include <CdmwLBCommon.idl>

/**
 * This module describes interfaces and data types of the CDMW Load Balancing
 * service.
 */
module CdmwLB { 

  exception ProfileNotFound {};
  exception TagNotFound {};

  typedef sequence<Object> Objects;

    interface IOGRFactory 
    {
      /**
       * Build the iogr
       *
       * @param Members          sequence of members & locations.
       * @param object_group_id  the object group id to use for the search.
       * @param lb_domain_id     The load balancing domain id.
       * @param object_group_version the object group reference version.
       *
       * @return the reference to the object created 
       *
       * @exception InvalidProperty if one or more of the properties in the
       *        sequence is not valid.
       * @exception UnsupportedProperty if one or more of the properties in
       *        the sequence is not supported.
       */
      Object build_iogr(in MemberInfos members,
                        in PortableGroup::ObjectGroupId         object_group_id,
                        in string type_id,
                        in string lb_domain_id,
                        in string lb_policy,
                        inout PortableGroup::ObjectGroupRefVersion object_group_ref_version,
                        in Objects fall_backs)
        raises(PortableGroup::ObjectNotCreated);
        

      /**
       * count the number of profile found into the IOGR
       *
       * @param obj The IOGR.
       *
       * @return the  number of profile found
       */
      long profile_count(in Object obj);


      /**
       * decode the specified profile to extract the CdmwLB::TagLBGroupTaggedComponent 
       * structure 
       *
       * @param obj The IOGR.
       * @param the profile to decode
       *
       * @return the CdmwLB::TagLBGroupTaggedComponent structure
       *
       * @exception ProfileNotFound if the profile number is over the limit
       * @exception TagNotFound if the TAG_LB_GROUP is not found into the profile
       */        
      CdmwLB::TagLBGroupTaggedComponent
      decode_profile_with_group_tag(in Object obj,
                                    in long profile)
        raises(ProfileNotFound,
               TagNotFound);

      /**
       * Extract the LBGroupTaggedComponent structure from the TaggedComponent
       *
       * @param tag_cmp The TaggedComponent to decode
       *
       * @return the CdmwLB::TagLBGroupTaggedComponent structure
       *
       * @exception TagNotFound if the TAG_LB_GROUP is not found 
       * 
       */

      CdmwLB::TagLBGroupTaggedComponent
      get_lb_tagged_components(in IOP::TaggedComponent tag_cmp)
	raises (TagNotFound);
    
       /**
       * decode the specified profile to extract the CdmwLB::TagFallbackTaggedComponent 
       * structure 
       *
       * @param obj The IOGR.
       * @param the profile to decode
       *
       * @return the CdmwLB::TagFallbackTaggedComponent structure
       *
       * @exception ProfileNotFound if the profile number is over the limit
       * @exception TagNotFound if the TAG_FALLBACK is not found into the profile
       */        
      CdmwLB::TagFallbackTaggedComponent
          decode_profile_with_fallback_tag(in Object obj,
                                       in long profile)
          raises(ProfileNotFound,
               TagNotFound);

      /**
       * decode an IOP::ServiceCOntext in order to extract the CdmwLB::LBGroupVersionServiceContext
       * structure
       *
       * @param the context to decode
       *
       * @return the CdmwLB::LBGroupVersionServiceContext structure
       *
       */

      CdmwLB::LBGroupVersionServiceContext
          decode_group_version_service_context(in IOP::ServiceContext svc_context); 
      
       /**
        * create the LB_GROUP_VERSION service context for the specified object group  
        *
        * @param group_version The group version used to create the Group Version Service Context.
        *
        * @return the IOP::ServiceContext structure
        */
      IOP::ServiceContext
          create_group_version_service_context(in PortableGroup::ObjectGroupRefVersion group_version, in PortableGroup::ObjectGroupId id);
          
      
      
    Object get_member_ref(in PortableGroup::ObjectGroup og, in long profile)
        raises(PortableGroup::MemberNotFound);
};
};
#endif // _CDMW_LB_IOGR_FACTORY_IDL_

