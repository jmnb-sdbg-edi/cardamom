/* ===================================================================== */
/*
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI. All rights reserved.
 * 
 * Copyright (C) SELEX-SI 2004-2005. All rights reserved
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Library General Public License as published
 * by the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General Public
 * License along with CARDAMOM; see the file COPYING. If not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
*/
/* ===================================================================== */
#ifndef _CDMW_LB_GROUP_REF_CACHE_IDL_
#define _CDMW_LB_GROUP_REF_CACHE_IDL_
#include <CdmwLBCommon.idl>

module CdmwLB {


    struct CacheData
    {
        PortableGroup::ObjectGroupRefVersion object_group_ref_version;
        Object iogr;
    };


   local interface GroupRefCache {
        exception UnknownGroupReference { };

        /**
         * Set the IOGR associated with a given group ID, and returns
         * the previous IOGR if any, nil otherwise.
         *
         * @param id the group id
         * @param iogr the IOGR
         * @return the previous binding.
         */
        void set(in short id, in PortableGroup::ObjectGroupRefVersion iogr_version, in Object iogr);
        
        void remove(in short id)
            raises(UnknownGroupReference);
        
        CacheData get(in short id)
            raises(UnknownGroupReference);
    };

    enum GroupRefUpdateCommandID {
        SET,
        REMOVE
    };
    
    struct GroupRefUpdateMessage
    {
        short command_id;
        short group_id;
        PortableGroup::ObjectGroupRefVersion object_group_ref_version;
        Object iogr;
    };

};   
#endif //_CDMW_LB_GROUP_REF_CACHE_IDL_
