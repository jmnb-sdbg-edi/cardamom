/*
 * IDENTIFICATION   = 1000000097680
 * REVISION         = 1
 * DATE             = 03-JAN-2005 07:45:46
 * DESCRIPTION      =  
 * SECURITY         = UNCLASSIFIED  
 * STATUS           = RELEASED
 * 
 */

/*
 * Copyright THALES NEDERLAND B.V. and/or its suppliers
 *
 * THIS SOFTWARE SOURCE CODE AND ANY EXECUTABLE DIRVED THEREOF ARE PROPRIETARY
 * TO THALES NEDERLAND B.V. AND/OR ITS SUPPLIERS, AS APPLICABLE, AND SHALL NOT
 * BE USED IN ANY WAY OTHER THAN BEFOREHAND AGREED ON BY THALES NEDERLAND B.V.,
 * NOR BE REPRODUCED OR DISCLOSED TO THIRD PARTIES WITHOUT PRIOR WRITTEN
 * AUTHORIZATION BY THALES NEDERLAND B.V. AND/OR ITS SUPPLIERS, AS APPLICABLE.
 */

module pingpong
{

    struct PP_min_msg
    {
	unsigned long       block;
        unsigned long       count;
    };
#pragma keylist PP_min_msg block     
    
    typedef sequence<char>  seq_char;

    struct PP_seq_msg
    {
	unsigned long       block;
        unsigned long       count;
        seq_char            payload;
    };
#pragma keylist PP_seq_msg block     
    
    struct PP_string_msg
    {
	unsigned long       block;
        unsigned long       count;
        string              a_string;
    };
#pragma keylist PP_string_msg block     
    
    typedef string<40> string_40;
    
    struct PP_fixed_msg
    {
	unsigned long       block;
        unsigned long       count;
        
        char                a_char;
        octet               a_octet;
        short               a_short;
        unsigned short      a_ushort;
        long                a_long;
        unsigned long       a_ulong;
        long long           a_longlong;
        unsigned long long  a_ulonglong;
        float               a_float;
        double              a_double;
        boolean             a_boolean;
        string_40           a_bstring;
    };
#pragma keylist PP_fixed_msg block

    struct PP_array_msg
    {
	unsigned long       block;
        unsigned long       count;
        
        char                str_arr_char[10];
        octet               str_arr_octet[10];
        short               str_arr_short[10];
        unsigned short      str_arr_ushort[10];
        long                str_arr_long[10];
        unsigned long       str_arr_ulong[10];
        long long           str_arr_longlong[10];
        unsigned long long  str_arr_ulonglong[10];
        float               str_arr_float[10];
        double              str_arr_double[10];
        boolean             str_arr_boolean[11];
    };
#pragma keylist PP_array_msg block

    struct PP_quit_msg
    {
	boolean		    quit;
    };
#pragma keylist PP_quit_msg

};
