/* =========================================================================== *
 * This file is part of CARDAMOM (R) which is jointly developed by THALES
 * and SELEX-SI.
 * 
 * It is derivative work based on PERCO Copyright (C) THALES 2000-2003.
 * All rights reserved.
 * 
 * CARDAMOM is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Library General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 * 
 * CARDAMOM is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU Library General
 * Public License along with CARDAMOM; see the file COPYING. If not, write to
 * the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * =========================================================================== */


#ifndef  HELLO_IDL_
#define  HELLO_IDL_

#include <Components.idl>

#include <CosNaming.idl>

#pragma prefix "acme.com"

module Hello
{
    /*
     * print a text
     */
    
    interface Display 
    {
        void display_hello ();
    };
    
    
    
    /**
     **  The Client component type.
     **/
    component Client
    {
        /**
         **  The receptable client_receptacle to connect the Client component
         **  to a Display object or facet reference.
         **/ 
        uses Display client_receptacle;
        
        
        /**
         **  The receptable to_naming to connect the Client component
         **  to the name service.
         **/ 
        uses CosNaming::NamingContext to_naming;

    };
    
    /**
     **  Simple home for instantiating Client components.
     **/
    home ClientHome manages Client 
    {
    };


    /**
     **  The Server component type.
     **/
    component Server 
    {
        /**
         **  The identifier name property.
         **/
        attribute string name;

        /**
         **  Splice port.
         **/
        attribute long splice_port;

        /**
         **  Executable name.
         **/
        attribute string executable_name;
        
        /**
         **  The facet for Clients components.
         **/
        provides Display server_facet;

    };
    
    /**
     **  Simple home for instantiating Server components.
     **/
    home ServerHome manages Server 
    {
    };
    
};

#endif // HELLO_IDL_


